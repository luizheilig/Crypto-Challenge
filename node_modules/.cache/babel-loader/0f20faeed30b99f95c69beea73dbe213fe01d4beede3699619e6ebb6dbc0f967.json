{"ast":null,"code":"var _jsxFileName = \"/home/luizheilig/Documents/project/Crypto-Challenge/src/components/Header.jsx\";\n// src/components/Header.test.js\nimport React from 'react';\nimport { render } from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect'; // For additional matchers\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntest('renders the correct content in Header', () => {\n  const {\n    getByText\n  } = render( /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this));\n\n  // Test each Link separately\n  const cryptosLink = getByText(/Cryptos/i);\n  const walletLink = getByText(/My Wallet/i);\n  const logoutLink = getByText(/Logout/i);\n\n  // Check if the links are in the document\n  expect(cryptosLink).toBeInTheDocument();\n  expect(walletLink).toBeInTheDocument();\n  expect(logoutLink).toBeInTheDocument();\n});","map":{"version":3,"names":["React","render","BrowserRouter","Router","Header","jsxDEV","_jsxDEV","test","getByText","children","fileName","_jsxFileName","lineNumber","columnNumber","cryptosLink","walletLink","logoutLink","expect","toBeInTheDocument"],"sources":["/home/luizheilig/Documents/project/Crypto-Challenge/src/components/Header.jsx"],"sourcesContent":["// src/components/Header.test.js\nimport React from 'react';\nimport { render } from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect'; // For additional matchers\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Header from './Header';\n\ntest('renders the correct content in Header', () => {\n  const { getByText } = render(\n    <Router>\n      <Header />\n    </Router>\n  );\n\n  // Test each Link separately\n  const cryptosLink = getByText(/Cryptos/i);\n  const walletLink = getByText(/My Wallet/i);\n  const logoutLink = getByText(/Logout/i);\n\n  // Check if the links are in the document\n  expect(cryptosLink).toBeInTheDocument();\n  expect(walletLink).toBeInTheDocument();\n  expect(logoutLink).toBeInTheDocument();\n});\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,OAAO,yCAAyC,CAAC,CAAC;AAClD,SAASC,aAAa,IAAIC,MAAM,QAAQ,kBAAkB;AAE1D,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9BC,IAAI,CAAC,uCAAuC,EAAE,MAAM;EAClD,MAAM;IAAEC;EAAU,CAAC,GAAGP,MAAM,eAC1BK,OAAA,CAACH,MAAM;IAAAM,QAAA,eACLH,OAAA,CAACF,MAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CACV,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGN,SAAS,CAAC,UAAU,CAAC;EACzC,MAAMO,UAAU,GAAGP,SAAS,CAAC,YAAY,CAAC;EAC1C,MAAMQ,UAAU,GAAGR,SAAS,CAAC,SAAS,CAAC;;EAEvC;EACAS,MAAM,CAACH,WAAW,CAAC,CAACI,iBAAiB,CAAC,CAAC;EACvCD,MAAM,CAACF,UAAU,CAAC,CAACG,iBAAiB,CAAC,CAAC;EACtCD,MAAM,CAACD,UAAU,CAAC,CAACE,iBAAiB,CAAC,CAAC;AACxC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}