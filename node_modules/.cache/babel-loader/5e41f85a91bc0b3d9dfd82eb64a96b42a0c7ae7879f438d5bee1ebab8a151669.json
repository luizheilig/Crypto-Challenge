{"ast":null,"code":"import React,{useEffect,useState}from'react';import{mockAPI}from'../helpers/mockAPI';import{useNavigate}from'react-router-dom';import Footer from'../components/Footer';import Header from'../components/Header';import'../css/CryptoList.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function CryptoList(){const[data,setData]=useState([]);const[addData,setAddData]=useState(null);const[quantity,setQuantity]=useState(null);const[searchTerm,setSearchTerm]=useState('');const navigate=useNavigate();useEffect(()=>{const fetchData=async()=>{setData(mockAPI.data);};fetchData();},[]);let USDollar=new Intl.NumberFormat('en-US',{style:'currency',currency:'usd'});function addBtnClick(_ref){let{target:{id}}=_ref;const addCrypto=data.filter(add=>Number(add.id)===Number(id));console.log(addCrypto);setAddData(addCrypto);}function filterCrypto(crypto){setSearchTerm(crypto);}const filteredData=data.filter(crypto=>crypto.name.toLowerCase().includes(searchTerm.toLowerCase()));const readStorage=()=>JSON.parse(localStorage.getItem('wallet'))||[];function addWallet(){const returnStorage=readStorage();const existingCryptoIndex=returnStorage.findIndex(crypto=>crypto.name===addData[0].name);if(existingCryptoIndex!==-1){const updatedWallet=[...returnStorage];updatedWallet[existingCryptoIndex].quantity+=quantity;localStorage.setItem('wallet',JSON.stringify(updatedWallet));}else{const itemWallet={name:addData[0].name,price:addData[0].quote.USD.price,quantity:quantity};localStorage.setItem('wallet',JSON.stringify([...returnStorage,itemWallet]));}navigate('/wallet');}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:addData&&/*#__PURE__*/_jsxs(\"div\",{className:\"addCryptoContainer\",children:[/*#__PURE__*/_jsx(\"h3\",{children:addData[0].name}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Price:\",' ',USDollar.format(addData[0].quote.USD.price)]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Quantity:\",' ',/*#__PURE__*/_jsx(\"input\",{type:\"number\",onChange:e=>setQuantity(Number(e.target.value))// Convertendo para número\n})]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Total:\",' ',USDollar.format(addData[0].quote.USD.price*quantity)]}),/*#__PURE__*/_jsx(\"button\",{className:\"addButtonWallet\",id:addData[0].name,onClick:addWallet,children:\"Add to Wallet\"})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{className:\"searchInput\",children:[\"Search (name)\",/*#__PURE__*/_jsx(\"input\",{onChange:e=>filterCrypto(e.target.value),value:searchTerm})]})}),/*#__PURE__*/_jsxs(\"table\",{className:\"cryptoTable\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Symbol\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Price (USD)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Market Cap (USD)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Supply (USD)\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredData&&filteredData.map(exp=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:exp.name}),/*#__PURE__*/_jsx(\"td\",{children:exp.symbol}),/*#__PURE__*/_jsx(\"td\",{children:USDollar.format(exp.quote.USD.price)}),/*#__PURE__*/_jsx(\"td\",{children:USDollar.format(exp.quote.USD.market_cap)}),/*#__PURE__*/_jsx(\"td\",{children:USDollar.format(exp.total_supply)}),/*#__PURE__*/_jsx(\"button\",{className:\"addBtn\",\"data-testid\":\"add-btn\",id:exp.id,onClick:addBtnClick,children:\"Add\"})]},exp.id))})]})]}),/*#__PURE__*/_jsx(Footer,{})]});}export default CryptoList;","map":{"version":3,"names":["React","useEffect","useState","mockAPI","useNavigate","Footer","Header","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CryptoList","data","setData","addData","setAddData","quantity","setQuantity","searchTerm","setSearchTerm","navigate","fetchData","USDollar","Intl","NumberFormat","style","currency","addBtnClick","_ref","target","id","addCrypto","filter","add","Number","console","log","filterCrypto","crypto","filteredData","name","toLowerCase","includes","readStorage","JSON","parse","localStorage","getItem","addWallet","returnStorage","existingCryptoIndex","findIndex","updatedWallet","setItem","stringify","itemWallet","price","quote","USD","children","className","format","type","onChange","e","value","onClick","map","exp","symbol","market_cap","total_supply"],"sources":["/home/luizheilig/Documents/project/Crypto-Challenge/src/pages/CryptoList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { mockAPI } from '../helpers/mockAPI';\nimport { useNavigate } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport '../css/CryptoList.css'\n\nfunction CryptoList() {\n\n    const [data, setData] = useState([]);\n    const [addData, setAddData] = useState(null);\n    const [quantity, setQuantity] = useState(null);\n    const [searchTerm, setSearchTerm] = useState('');\n    const navigate = useNavigate();\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        setData(mockAPI.data);\n      };\n      fetchData();\n    }, []);\n    \n    let USDollar = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'usd',\n    });\n    \n    function addBtnClick({ target: { id } }) {\n        const addCrypto = data.filter((add) => Number(add.id) === Number(id));\n        console.log(addCrypto);\n        setAddData(addCrypto);\n    }\n    \n    function filterCrypto(crypto) {\n        setSearchTerm(crypto);\n    }\n    \n    const filteredData = data.filter((crypto) =>\n    crypto.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    \n    const readStorage = () => JSON\n    .parse(localStorage.getItem('wallet')) || [];\n    \n    function addWallet() {\n        const returnStorage = readStorage();\n        const existingCryptoIndex = returnStorage.findIndex(\n            (crypto) => crypto.name === addData[0].name\n        );\n    \n        if (existingCryptoIndex !== -1) {\n            const updatedWallet = [...returnStorage];\n            updatedWallet[existingCryptoIndex].quantity += quantity;\n            localStorage.setItem('wallet', JSON.stringify(updatedWallet));\n        } else {\n            const itemWallet = {\n                name: addData[0].name,\n                price: addData[0].quote.USD.price,\n                quantity: quantity,\n            };\n            localStorage.setItem('wallet', JSON.stringify([...returnStorage, itemWallet]));\n        }\n        navigate('/wallet');\n    }\n\n  return (\n    <>\n    <Header/>\n    <div className=\"container\">\n      <br></br>\n        <div>\n            {addData && \n            <div className='addCryptoContainer'>\n            <h3>{addData[0].name}</h3>\n            <h3>Price:{' '}{USDollar.format(addData[0].quote.USD.price)}</h3>\n            <h3>\n              Quantity:{' '}\n              <input\n                type=\"number\"\n                onChange={(e) => setQuantity(Number(e.target.value))} // Convertendo para número\n              ></input>\n            </h3>\n            {\n              <h3>\n                Total:{' '}\n                {USDollar.format(addData[0].quote.USD.price * quantity)}\n              </h3>\n            }\n             <button\n                className='addButtonWallet'\n                id={ addData[0].name }\n                onClick={ addWallet }\n            >\n                Add to Wallet\n            </button>\n            </div>\n            }\n        </div>\n        <div >\n        <label className='searchInput'>\n          Search (name)\n          <input \n            onChange={(e) => filterCrypto(e.target.value)}\n            value={searchTerm}\n          ></input>\n        </label>\n        </div>\n {     <table className='cryptoTable'>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Symbol</th>\n            <th>Price (USD)</th>\n            <th>Market Cap (USD)</th>\n            <th>Total Supply (USD)</th>\n          </tr>\n        </thead>\n        <tbody>\n        {filteredData &&\n            filteredData.map((exp) => (\n            <tr key={ exp.id }>\n              <td>{exp.name}</td>\n              <td>{exp.symbol}</td>\n              <td>{USDollar.format(exp.quote.USD.price)}</td>\n              <td>{USDollar.format(exp.quote.USD.market_cap)}</td>\n              <td>{USDollar.format(exp.total_supply)}</td>\n                <button\n                  className='addBtn'\n                  data-testid=\"add-btn\"\n                  id={ exp.id }\n                  onClick={ addBtnClick }\n                >\n                  Add \n                </button>\n            </tr>\n          ))}\n        </tbody>\n      </table>}\n    </div>\n    < Footer/>\n  </>\n  );\n}\n\nexport default CryptoList;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,OAAO,KAAQ,oBAAoB,CAC5C,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,uBAAuB,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE9B,QAAS,CAAAC,UAAUA,CAAA,CAAG,CAElB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACgB,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACkB,UAAU,CAAEC,aAAa,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAAoB,QAAQ,CAAGlB,WAAW,CAAC,CAAC,CAE9BH,SAAS,CAAC,IAAM,CACd,KAAM,CAAAsB,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5BR,OAAO,CAACZ,OAAO,CAACW,IAAI,CAAC,CACvB,CAAC,CACDS,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,GAAI,CAAAC,QAAQ,CAAG,GAAI,CAAAC,IAAI,CAACC,YAAY,CAAC,OAAO,CAAE,CAC1CC,KAAK,CAAE,UAAU,CACjBC,QAAQ,CAAE,KACd,CAAC,CAAC,CAEF,QAAS,CAAAC,WAAWA,CAAAC,IAAA,CAAqB,IAApB,CAAEC,MAAM,CAAE,CAAEC,EAAG,CAAE,CAAC,CAAAF,IAAA,CACnC,KAAM,CAAAG,SAAS,CAAGnB,IAAI,CAACoB,MAAM,CAAEC,GAAG,EAAKC,MAAM,CAACD,GAAG,CAACH,EAAE,CAAC,GAAKI,MAAM,CAACJ,EAAE,CAAC,CAAC,CACrEK,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC,CACtBhB,UAAU,CAACgB,SAAS,CAAC,CACzB,CAEA,QAAS,CAAAM,YAAYA,CAACC,MAAM,CAAE,CAC1BnB,aAAa,CAACmB,MAAM,CAAC,CACzB,CAEA,KAAM,CAAAC,YAAY,CAAG3B,IAAI,CAACoB,MAAM,CAAEM,MAAM,EACxCA,MAAM,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACxB,UAAU,CAACuB,WAAW,CAAC,CAAC,CAC3D,CAAC,CAED,KAAM,CAAAE,WAAW,CAAGA,CAAA,GAAMC,IAAI,CAC7BC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAI,EAAE,CAE5C,QAAS,CAAAC,SAASA,CAAA,CAAG,CACjB,KAAM,CAAAC,aAAa,CAAGN,WAAW,CAAC,CAAC,CACnC,KAAM,CAAAO,mBAAmB,CAAGD,aAAa,CAACE,SAAS,CAC9Cb,MAAM,EAAKA,MAAM,CAACE,IAAI,GAAK1B,OAAO,CAAC,CAAC,CAAC,CAAC0B,IAC3C,CAAC,CAED,GAAIU,mBAAmB,GAAK,CAAC,CAAC,CAAE,CAC5B,KAAM,CAAAE,aAAa,CAAG,CAAC,GAAGH,aAAa,CAAC,CACxCG,aAAa,CAACF,mBAAmB,CAAC,CAAClC,QAAQ,EAAIA,QAAQ,CACvD8B,YAAY,CAACO,OAAO,CAAC,QAAQ,CAAET,IAAI,CAACU,SAAS,CAACF,aAAa,CAAC,CAAC,CACjE,CAAC,IAAM,CACH,KAAM,CAAAG,UAAU,CAAG,CACff,IAAI,CAAE1B,OAAO,CAAC,CAAC,CAAC,CAAC0B,IAAI,CACrBgB,KAAK,CAAE1C,OAAO,CAAC,CAAC,CAAC,CAAC2C,KAAK,CAACC,GAAG,CAACF,KAAK,CACjCxC,QAAQ,CAAEA,QACd,CAAC,CACD8B,YAAY,CAACO,OAAO,CAAC,QAAQ,CAAET,IAAI,CAACU,SAAS,CAAC,CAAC,GAAGL,aAAa,CAAEM,UAAU,CAAC,CAAC,CAAC,CAClF,CACAnC,QAAQ,CAAC,SAAS,CAAC,CACvB,CAEF,mBACEZ,KAAA,CAAAE,SAAA,EAAAiD,QAAA,eACArD,IAAA,CAACF,MAAM,GAAC,CAAC,cACTI,KAAA,QAAKoD,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxBrD,IAAA,QAAQ,CAAC,cACPA,IAAA,QAAAqD,QAAA,CACK7C,OAAO,eACRN,KAAA,QAAKoD,SAAS,CAAC,oBAAoB,CAAAD,QAAA,eACnCrD,IAAA,OAAAqD,QAAA,CAAK7C,OAAO,CAAC,CAAC,CAAC,CAAC0B,IAAI,CAAK,CAAC,cAC1BhC,KAAA,OAAAmD,QAAA,EAAI,QAAM,CAAC,GAAG,CAAErC,QAAQ,CAACuC,MAAM,CAAC/C,OAAO,CAAC,CAAC,CAAC,CAAC2C,KAAK,CAACC,GAAG,CAACF,KAAK,CAAC,EAAK,CAAC,cACjEhD,KAAA,OAAAmD,QAAA,EAAI,WACO,CAAC,GAAG,cACbrD,IAAA,UACEwD,IAAI,CAAC,QAAQ,CACbC,QAAQ,CAAGC,CAAC,EAAK/C,WAAW,CAACiB,MAAM,CAAC8B,CAAC,CAACnC,MAAM,CAACoC,KAAK,CAAC,CAAG;AAAA,CAChD,CAAC,EACP,CAAC,cAEHzD,KAAA,OAAAmD,QAAA,EAAI,QACI,CAAC,GAAG,CACTrC,QAAQ,CAACuC,MAAM,CAAC/C,OAAO,CAAC,CAAC,CAAC,CAAC2C,KAAK,CAACC,GAAG,CAACF,KAAK,CAAGxC,QAAQ,CAAC,EACrD,CAAC,cAENV,IAAA,WACGsD,SAAS,CAAC,iBAAiB,CAC3B9B,EAAE,CAAGhB,OAAO,CAAC,CAAC,CAAC,CAAC0B,IAAM,CACtB0B,OAAO,CAAGlB,SAAW,CAAAW,QAAA,CACxB,eAED,CAAQ,CAAC,EACJ,CAAC,CAEL,CAAC,cACNrD,IAAA,QAAAqD,QAAA,cACAnD,KAAA,UAAOoD,SAAS,CAAC,aAAa,CAAAD,QAAA,EAAC,eAE7B,cAAArD,IAAA,UACEyD,QAAQ,CAAGC,CAAC,EAAK3B,YAAY,CAAC2B,CAAC,CAACnC,MAAM,CAACoC,KAAK,CAAE,CAC9CA,KAAK,CAAE/C,UAAW,CACZ,CAAC,EACJ,CAAC,CACH,CAAC,cACPV,KAAA,UAAOoD,SAAS,CAAC,aAAa,CAAAD,QAAA,eAC7BrD,IAAA,UAAAqD,QAAA,cACEnD,KAAA,OAAAmD,QAAA,eACErD,IAAA,OAAAqD,QAAA,CAAI,MAAI,CAAI,CAAC,cACbrD,IAAA,OAAAqD,QAAA,CAAI,QAAM,CAAI,CAAC,cACfrD,IAAA,OAAAqD,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBrD,IAAA,OAAAqD,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBrD,IAAA,OAAAqD,QAAA,CAAI,oBAAkB,CAAI,CAAC,EACzB,CAAC,CACA,CAAC,cACRrD,IAAA,UAAAqD,QAAA,CACCpB,YAAY,EACTA,YAAY,CAAC4B,GAAG,CAAEC,GAAG,eACrB5D,KAAA,OAAAmD,QAAA,eACErD,IAAA,OAAAqD,QAAA,CAAKS,GAAG,CAAC5B,IAAI,CAAK,CAAC,cACnBlC,IAAA,OAAAqD,QAAA,CAAKS,GAAG,CAACC,MAAM,CAAK,CAAC,cACrB/D,IAAA,OAAAqD,QAAA,CAAKrC,QAAQ,CAACuC,MAAM,CAACO,GAAG,CAACX,KAAK,CAACC,GAAG,CAACF,KAAK,CAAC,CAAK,CAAC,cAC/ClD,IAAA,OAAAqD,QAAA,CAAKrC,QAAQ,CAACuC,MAAM,CAACO,GAAG,CAACX,KAAK,CAACC,GAAG,CAACY,UAAU,CAAC,CAAK,CAAC,cACpDhE,IAAA,OAAAqD,QAAA,CAAKrC,QAAQ,CAACuC,MAAM,CAACO,GAAG,CAACG,YAAY,CAAC,CAAK,CAAC,cAC1CjE,IAAA,WACEsD,SAAS,CAAC,QAAQ,CAClB,cAAY,SAAS,CACrB9B,EAAE,CAAGsC,GAAG,CAACtC,EAAI,CACboC,OAAO,CAAGvC,WAAa,CAAAgC,QAAA,CACxB,KAED,CAAQ,CAAC,GAbHS,GAAG,CAACtC,EAcV,CACL,CAAC,CACG,CAAC,EACH,CAAC,EACL,CAAC,cACNxB,IAAA,CAAEH,MAAM,GAAC,CAAC,EACV,CAAC,CAEL,CAEA,cAAe,CAAAQ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}