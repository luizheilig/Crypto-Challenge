{"ast":null,"code":"var _jsxFileName = \"/home/luizheilig/Documents/project/Crypto-Challenge/crypto-challenge/src/pages/Wallet.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../css/Wallet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Wallet() {\n  _s();\n  const [wallet, setWallet] = useState([]);\n  useEffect(() => {\n    const returnStorage = readStorage();\n    setWallet(returnStorage);\n  }, []);\n  const readStorage = () => JSON.parse(localStorage.getItem('wallet')) || [];\n  let USDollar = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'usd'\n  });\n  const removeBtnClick = name => {\n    const updatedWallet = wallet.filter(coin => coin.name !== name);\n    localStorage.setItem('wallet', JSON.stringify(updatedWallet));\n    setWallet(updatedWallet);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: wallet && wallet.map(coin => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: coin.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: coin.quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: USDollar.format(coin.quantity * coin.price)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"add-btn\",\n        onClick: () => removeBtnClick(coin.name),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, coin.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n}\n_s(Wallet, \"GWj0LZVjZlLNWIiqHotntO+5djk=\");\n_c = Wallet;\nexport default Wallet;\nvar _c;\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Wallet","_s","wallet","setWallet","returnStorage","readStorage","JSON","parse","localStorage","getItem","USDollar","Intl","NumberFormat","style","currency","removeBtnClick","name","updatedWallet","filter","coin","setItem","stringify","children","map","className","fileName","_jsxFileName","lineNumber","columnNumber","quantity","format","price","onClick","_c","$RefreshReg$"],"sources":["/home/luizheilig/Documents/project/Crypto-Challenge/crypto-challenge/src/pages/Wallet.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../css/Wallet.css'\n\n\nfunction Wallet() {\n  const [wallet, setWallet] = useState([]);\n\n  useEffect(() => {\n    const returnStorage = readStorage();\n    setWallet(returnStorage);\n  }, []);\n  const readStorage = () => JSON\n  .parse(localStorage.getItem('wallet')) || [];\n\n  let USDollar = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'usd',\n});\n\n  const removeBtnClick = (name) => {\n    const updatedWallet = wallet.filter((coin) => coin.name !== name);\n    localStorage.setItem('wallet', JSON.stringify(updatedWallet));\n    setWallet(updatedWallet);\n  };\n      \n  return (\n    <>\n      {wallet &&\n            wallet.map((coin) => (\n            <div className=\"wallet-item\" key={ coin.name }>\n              <h1>{coin.name}</h1>\n              <h1>{coin.quantity}</h1>\n              <h1>{USDollar.format(coin.quantity*coin.price)}</h1>\n                <button\n                  data-testid=\"add-btn\"\n                  onClick={ () => removeBtnClick(coin.name) }\n                >\n                  X\n                </button>\n            </div>\n          ))}\n    </>\n  );\n}\n\nexport default Wallet;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAGC,WAAW,CAAC,CAAC;IACnCF,SAAS,CAACC,aAAa,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,WAAW,GAAGA,CAAA,KAAMC,IAAI,CAC7BC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE;EAE5C,IAAIC,QAAQ,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IAC5CC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEA,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC/B,MAAMC,aAAa,GAAGf,MAAM,CAACgB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,IAAI,KAAKA,IAAI,CAAC;IACjER,YAAY,CAACY,OAAO,CAAC,QAAQ,EAAEd,IAAI,CAACe,SAAS,CAACJ,aAAa,CAAC,CAAC;IAC7Dd,SAAS,CAACc,aAAa,CAAC;EAC1B,CAAC;EAED,oBACEpB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,EACGpB,MAAM,IACDA,MAAM,CAACqB,GAAG,CAAEJ,IAAI,iBAChBtB,OAAA;MAAK2B,SAAS,EAAC,aAAa;MAAAF,QAAA,gBAC1BzB,OAAA;QAAAyB,QAAA,EAAKH,IAAI,CAACH;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpB/B,OAAA;QAAAyB,QAAA,EAAKH,IAAI,CAACU;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxB/B,OAAA;QAAAyB,QAAA,EAAKZ,QAAQ,CAACoB,MAAM,CAACX,IAAI,CAACU,QAAQ,GAACV,IAAI,CAACY,KAAK;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClD/B,OAAA;QACE,eAAY,SAAS;QACrBmC,OAAO,EAAGA,CAAA,KAAMjB,cAAc,CAACI,IAAI,CAACH,IAAI,CAAG;QAAAM,QAAA,EAC5C;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GATsBT,IAAI,CAACH,IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUvC,CACN;EAAC,gBACN,CAAC;AAEP;AAAC3B,EAAA,CAvCQD,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAyCf,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}